{"version":3,"sources":["filtie.js"],"names":["root","factory","define","amd","module","exports","Filtie","this","getTableColumnCount","$table","$$tbits","children","i","l","length","tagName","Error","removeDiacritics","str","defaultDiacriticsRemovalMap","base","letters","replace","FiltieInstance","options","getFilterTest","$filter","comparison","value","regex","fuzzy","test","match","num","parseFloat","isNaN","cellValue","indexOf","$cell","innerText","diacriticSensitive","caseSensitive","toLowerCase","call","toggleRow","$row","isShown","hidden","filterTable","filterTests","t","k","$$filters","push","column","callback","$$rows","dispatchEvent","events","afterFilter","buildFilterInput","offset","document","createElement","setAttribute","style","width","addEventListener","refilterEvent","$tbody","getAttribute","buildFilterCell","$td","appendChild","buildFilterRow","size","querySelector","Object","assign","defaults","$filterBody","insertBefore","create","attachTojQuery","jQuery","method","window","$","jquery","console","error","fn","Array","prototype","slice","apply","arguments","each","filter","CustomEvent","target","undefined","TypeError","output","index","source","nextKey","hasOwnProperty"],"mappings":"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","file":"filtie.min.js","sourcesContent":["/*!\n * Filtie.js v0.0.1\n * An inoffensive table filterer for developers\n */\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // environments that support module.exports, like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.Filtie = factory();\n    }\n}(this, function FiltieConstructor() {\n    'use strict';\n\n    // Default values\n    var defaults = {\n      refilterEvent: 'keyup',\n      caseSensitive: false,\n      diacriticSensitive: false,\n      fuzzy: true\n    };\n\n    // Events that can be called/listened to\n    var events = {\n      // This can be fired to filter the table\n      filter: new CustomEvent('filtie:filter'),\n      // This is fired after the table if filtered\n      afterFilter: new CustomEvent('filtie:afterFilter')\n    };\n\n    /**\n     * Reusable functions\n     */\n\n    // Get the number of columns in a table\n    // Use the first td, as people often leave out trailing columns in the thead\n    function getTableColumnCount($table) {\n      var $$tbits = $table.children;\n      for (var i = 0, l = $$tbits.length; i < l; i++) {\n        if ($$tbits[i].tagName === 'TBODY') {\n          // Count the number of cells in the first table row\n          return $$tbits[i].children[0].children.length;\n        }\n      }\n\n      // If a tbody couldn't be found, throw an error\n      throw new Error('No tbody found in table');\n    }\n\n    // Strip diacritics from a string\n    // Taken from http://jsperf.com/latinize, though I'm sure it was somewhere\n    // else before that\n    function removeDiacritics(str) {\n      var defaultDiacriticsRemovalMap = [\n        {base: 'A', letters: /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g},\n        {base: 'AA',letters: /[\\uA732]/g},\n        {base: 'AE',letters: /[\\u00C6\\u01FC\\u01E2]/g},\n        {base: 'AO',letters: /[\\uA734]/g},\n        {base: 'AU',letters: /[\\uA736]/g},\n        {base: 'AV',letters: /[\\uA738\\uA73A]/g},\n        {base: 'AY',letters: /[\\uA73C]/g},\n        {base: 'B', letters: /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g},\n        {base: 'C', letters: /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g},\n        {base: 'D', letters: /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g},\n        {base: 'DZ',letters: /[\\u01F1\\u01C4]/g},\n        {base: 'Dz',letters: /[\\u01F2\\u01C5]/g},\n        {base: 'E', letters: /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g},\n        {base: 'F', letters: /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g},\n        {base: 'G', letters: /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g},\n        {base: 'H', letters: /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g},\n        {base: 'I', letters: /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g},\n        {base: 'J', letters: /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g},\n        {base: 'K', letters: /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g},\n        {base: 'L', letters: /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g},\n        {base: 'LJ',letters: /[\\u01C7]/g},\n        {base: 'Lj',letters: /[\\u01C8]/g},\n        {base: 'M', letters: /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g},\n        {base: 'N', letters: /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g},\n        {base: 'NJ',letters: /[\\u01CA]/g},\n        {base: 'Nj',letters: /[\\u01CB]/g},\n        {base: 'O', letters: /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g},\n        {base: 'OI',letters: /[\\u01A2]/g},\n        {base: 'OO',letters: /[\\uA74E]/g},\n        {base: 'OU',letters: /[\\u0222]/g},\n        {base: 'P', letters: /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g},\n        {base: 'Q', letters: /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g},\n        {base: 'R', letters: /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g},\n        {base: 'S', letters: /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g},\n        {base: 'T', letters: /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g},\n        {base: 'TZ',letters: /[\\uA728]/g},\n        {base: 'U', letters: /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g},\n        {base: 'V', letters: /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g},\n        {base: 'VY',letters: /[\\uA760]/g},\n        {base: 'W', letters: /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g},\n        {base: 'X', letters: /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g},\n        {base: 'Y', letters: /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g},\n        {base: 'Z', letters: /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g},\n        {base: 'a', letters: /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g},\n        {base: 'aa',letters: /[\\uA733]/g},\n        {base: 'ae',letters: /[\\u00E6\\u01FD\\u01E3]/g},\n        {base: 'ao',letters: /[\\uA735]/g},\n        {base: 'au',letters: /[\\uA737]/g},\n        {base: 'av',letters: /[\\uA739\\uA73B]/g},\n        {base: 'ay',letters: /[\\uA73D]/g},\n        {base: 'b', letters: /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g},\n        {base: 'c', letters: /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g},\n        {base: 'd', letters: /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g},\n        {base: 'dz',letters: /[\\u01F3\\u01C6]/g},\n        {base: 'e', letters: /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g},\n        {base: 'f', letters: /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g},\n        {base: 'g', letters: /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g},\n        {base: 'h', letters: /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g},\n        {base: 'hv',letters: /[\\u0195]/g},\n        {base: 'i', letters: /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g},\n        {base: 'j', letters: /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g},\n        {base: 'k', letters: /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g},\n        {base: 'l', letters: /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g},\n        {base: 'lj',letters: /[\\u01C9]/g},\n        {base: 'm', letters: /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g},\n        {base: 'n', letters: /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g},\n        {base: 'nj',letters: /[\\u01CC]/g},\n        {base: 'o', letters: /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g},\n        {base: 'oi',letters: /[\\u01A3]/g},\n        {base: 'ou',letters: /[\\u0223]/g},\n        {base: 'oo',letters: /[\\uA74F]/g},\n        {base: 'p',letters: /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g},\n        {base: 'q',letters: /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g},\n        {base: 'r',letters: /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g},\n        {base: 's',letters: /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g},\n        {base: 't',letters: /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g},\n        {base: 'tz',letters: /[\\uA729]/g},\n        {base: 'u',letters: /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g},\n        {base: 'v',letters: /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g},\n        {base: 'vy',letters: /[\\uA761]/g},\n        {base: 'w',letters: /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g},\n        {base: 'x',letters: /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g},\n        {base: 'y',letters: /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g},\n        {base: 'z',letters: /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g}\n      ];\n\n      for(var i = 0; i < defaultDiacriticsRemovalMap.length; i++) {\n        str = str.replace(defaultDiacriticsRemovalMap[i].letters, defaultDiacriticsRemovalMap[i].base);\n      }\n\n      return str;\n    }\n\n    // A polyfill for Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function(target) {\n        'use strict';\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    }\n\n    // The Filtie Instance. One of these is generated for each instance of\n    // Filtie on the page.\n    function FiltieInstance($table, options) {\n      // Set some initialisation variables\n      var $$filters = [];\n      var $tbody = $table.querySelector('tbody');\n      var $$rows = $tbody.children;\n\n      // Merge in the default options\n      options = Object.assign({}, defaults, options);\n\n      // Test whether a cell matches the filter\n      function getFilterTest($filter) {\n        var value = $filter.value;\n        var regex = /^(>=?|<=?)\\s*(-?[0-9.]+)?\\s*$/;\n        var comparison;\n\n        if (options.fuzzy && regex.test(value)) {\n          var match = value.match(regex);\n          var num = parseFloat(match[2], 10);\n\n          if (isNaN(num)) {\n            comparison = function filterTestNull() {\n              return true;\n            }\n          } else if (match[1] === '>') {\n            comparison = function filterTestFuzzy(cellValue) {\n              return cellValue > num;\n            }\n          } else if (match[1] === '<') {\n            comparison = function filterTestFuzzy(cellValue) {\n              return cellValue < num;\n            }\n          } else if (match[1] === '>=') {\n            comparison = function filterTestFuzzy(cellValue) {\n              return cellValue >= num;\n            }\n          } else if (match[1] === '<=') {\n            comparison = function filterTestFuzzy(cellValue) {\n              return cellValue <= num;\n            }\n          }\n        } else {\n          comparison = function filterTestContains(cellValue, value) {\n            return cellValue.indexOf(value) > -1;\n          }\n        }\n\n        return function($cell) {\n          var cellValue = $cell.innerText;\n\n          // If not diacritic sensitive, remove all diacritics\n          if (!options.diacriticSensitive) {\n            cellValue = removeDiacritics(cellValue);\n            value = removeDiacritics(value);\n          }\n\n          // If not case sensitive, convert to lower case\n          if (!options.caseSensitive) {\n            cellValue = cellValue.toLowerCase();\n            value = value.toLowerCase();\n          }\n\n          return comparison.call(this, cellValue, value);\n        }\n      }\n\n      // Show or hide a specified row\n      function toggleRow($row, isShown) {\n        $row.hidden = !isShown;\n      }\n\n      // Show or hide rows in the table based on active filters\n      function filterTable() {\n        var filterTests = [];\n\n        // Generate the filter test functions that we'll use\n        for (var t = 0, k = $$filters.length; t < k; t++) {\n          var $filter = $$filters[t];\n\n          if ($filter.value === '') continue;\n\n          filterTests.push({\n            column: t,\n            callback: getFilterTest($filter)\n          });\n        }\n\n        // Go through each row to see if it should be shown\n        for (var i = 0, l = $$rows.length; i < l; i++) {\n          var $row = $$rows[i];\n          var isShown = true;\n          for (var t = 0, k = filterTests.length; t < k; t++) {\n            var $cell = $row.children[filterTests[t].column];\n            // Check that the row doesn't conflict with any filters\n            if (!filterTests[t].callback.call(this, $cell)) {\n              isShown = false;\n              break;\n            }\n          }\n\n          toggleRow($row, isShown);\n        }\n\n        $table.dispatchEvent(events.afterFilter);\n      }\n\n      // Create a filter\n      function buildFilterInput(offset) {\n        var $filter = document.createElement('input');\n        $filter.setAttribute('type', 'search');\n        $filter.style.width = '100%';\n\n        // Filter the table when the relevant event (default: onkeyup) is fired\n        $filter.addEventListener(options.refilterEvent, filterTable);\n        // The `search` event is fired when the little \"x\" is clicked on the field\n        $filter.addEventListener('search', filterTable);\n\n        // Naive check whether the filter needs to be rtl\n        if ($tbody.children[0].children[offset].getAttribute('dir') === 'rtl') {\n          $filter.setAttribute('dir', 'rtl');\n        }\n\n        // Add the filter to the dictionary\n        $$filters[offset] = $filter;\n\n        return $filter;\n      }\n\n      // Create a cell containing a filter\n      function buildFilterCell(offset) {\n        var $td = document.createElement('td');\n        $td.appendChild(buildFilterInput(offset));\n        return $td;\n      }\n\n      // Create a row of filters\n      function buildFilterRow(size) {\n        var $row = document.createElement('tr');\n        for (var i = 0; i < size; i++) {\n          $row.appendChild(buildFilterCell(i));\n        }\n\n        return $row;\n      }\n\n      // When the table is asked to be filtered, filter it\n      $table.addEventListener('filtie:filter', function() {\n        filterTable();\n      });\n\n      // Build the filter row and add it to the table\n      var $row = buildFilterRow(getTableColumnCount($table));\n      var $filterBody = document.createElement('tbody');\n      $filterBody.appendChild($row);\n      $table.insertBefore($filterBody, $tbody);\n\n      // Set aria values for the table\n      $table.setAttribute('aria-atomic', true);\n      $table.setAttribute('aria-live', 'polite');\n      $table.setAttribute('aria-relevant', 'all');\n    }\n\n    function create($table, options) {\n      return new FiltieInstance($table);\n    }\n\n    /**\n     * Attach functionality to the supplied jQuery object\n     */\n    function attachTojQuery(jQuery, method) {\n        // Default object to global jQuery\n        if (typeof jQuery === 'undefined') jQuery = window.jQuery;\n        // Default method to \"filtie\"\n        if (typeof method === 'undefined') method = 'filtie';\n\n        // Not valid jQuery object\n        if (typeof jQuery !== 'function' || typeof $().jquery !== 'string') {\n            console.error('Invalid jQuery object supplied');\n            return false;\n        }\n\n        // Add filtie to jQuery under the specified method\n        jQuery.fn[method] = function(options) {\n            var args = Array.prototype.slice.apply(arguments);\n\n            return $(this).each(function() {\n                create(this, options);\n            });\n        }\n    }\n\n    attachTojQuery();\n\n    /**\n     * Return public methods\n     */\n    return {\n        create: create,\n        events: events\n    };\n}));\n"],"sourceRoot":"/source/"}